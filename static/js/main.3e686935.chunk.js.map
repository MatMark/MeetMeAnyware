{"version":3,"sources":["MyMenu.js","Login.js","Main.js","serviceWorker.js","index.js"],"names":["MyMenu","handleItemClick","name","_this","setState","activeItem","this","state","react_default","a","createElement","Menu","vertical","Item","Header","active","onClick","Component","Login","Grid","centered","columns","Column","as","textAlign","Segment","Form","size","Input","fluid","icon","iconPosition","placeholder","type","Button","alert","Message","href","Main","divided","MyMenu_MyMenu","msg1","Boolean","window","location","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e686935.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nexport default class MyMenu extends Component {\r\n  handleItemClick = name => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state || {}\r\n\r\n    return (\r\n      <Menu vertical>\r\n        <Menu.Item>\r\n          <Menu.Header>Konto</Menu.Header>\r\n\r\n          <Menu.Menu>\r\n            <Menu.Item\r\n              name='Harmonogram'\r\n              active={activeItem === 'Harmonogram'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='Znajomi'\r\n              active={activeItem === 'Znajomi'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='Dane konta'\r\n              active={activeItem === 'Dane konta'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n          </Menu.Menu>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Menu.Header>Wydarzenia</Menu.Header>\r\n\r\n          <Menu.Menu>\r\n            <Menu.Item\r\n              name='Utwórz'\r\n              active={activeItem === 'Utwórz'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='Znajdź'\r\n              active={activeItem === 'Znajdź'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item \r\n              name='Bierzesz udział' \r\n              active={activeItem === 'Bierzesz udział'} \r\n              onClick={this.handleItemClick} />\r\n          </Menu.Menu>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Menu.Header>Pomoc</Menu.Header>\r\n\r\n          <Menu.Menu>\r\n            <Menu.Item name='email' active={activeItem === 'email'} onClick={this.handleItemClick}>\r\n              E-mail Support\r\n            </Menu.Item>\r\n\r\n            <Menu.Item name='faq' active={activeItem === 'faq'} onClick={this.handleItemClick}>\r\n              FAQs\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\n\r\nexport default () => (\r\n  <Grid centered columns={2}>\r\n    <Grid.Column>\r\n      <Header as=\"h2\" textAlign=\"center\">\r\n        Logowanie do MeetMeAnyware\r\n      </Header>\r\n      <Segment>\r\n        <Form size=\"large\">\r\n          <Form.Input\r\n            fluid\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Login\"\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Hasło\"\r\n            type=\"password\"\r\n          />\r\n\r\n          <Button onClick={() => alert('Zalogowano')}>Zaloguj</Button>\r\n        \r\n        </Form>\r\n      </Segment>\r\n      <Message>\r\n        Nie masz jeszcze konta? <a href=\"https://matmark.github.io/MeetMeAnyware/\">Zarejestruj się</a>\r\n      </Message>\r\n    </Grid.Column>\r\n  </Grid>\r\n);","import React, { Fragment } from 'react';\nimport { Container, Grid, Segment, GridRow } from 'semantic-ui-react';\n\nimport MyMenu from './MyMenu';\nimport Login from './Login';\n\nvar msg1 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent accumsan nibh eget aliquet sodales. Sed turpis ligula, accumsan non ipsum a, consectetur venenatis diam. Nullam sagittis odio eu gravida eleifend. Fusce varius nunc vel velit imperdiet consectetur. Nam id pharetra quam, sed interdum eros. Donec at molestie tellus, id hendrerit velit. Integer porttitor dignissim magna at finibus. Donec tincidunt volutpat metus sed convallis. Quisque pharetra finibus sem, vulputate finibus dolor aliquam vitae. Duis consectetur porta eros id egestas. Aliquam non sapien nec tortor interdum semper non eu nulla. Morbi sit amet purus posuere, mollis tellus eu, rhoncus massa.\\n\"\nvar msg2 = \"Nullam in fringilla augue, eu hendrerit quam. Curabitur tincidunt scelerisque tellus, pellentesque facilisis nulla consectetur non. Ut venenatis tincidunt pellentesque. Donec tristique consectetur pellentesque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nunc sed rutrum nisl. Pellentesque sit amet rhoncus odio, et tristique enim. Proin mattis volutpat viverra.\\n\"\nvar msg3 = \"Curabitur vehicula mollis neque ut consectetur. Donec eleifend dui arcu, mattis tincidunt est dignissim non. Praesent feugiat scelerisque venenatis. Proin accumsan dui ac vulputate venenatis. In non eros a nulla gravida accumsan. Cras ex arcu, dapibus malesuada tellus id, dictum scelerisque massa. Nam dui mauris, porttitor ultricies congue et, iaculis ac diam. Quisque sed mattis magna. Morbi at efficitur libero. Vivamus sit amet porta felis. Pellentesque rutrum, mi ultricies ultricies bibendum, ex dolor porttitor augue, non interdum enim orci eu libero. Cras sit amet viverra ipsum, vel sodales velit. Etiam tempus ante ut dignissim mattis.\\n\"\n\nconst Main = () => (\n\n    <Grid columns={3} divided>\n      <Grid.Column>\n        <MyMenu />\n      </Grid.Column>\n      <Grid.Column>\n        <Segment>\n          <Login />\n        </Segment>\n      </Grid.Column>\n      <Grid.Column> \n        {msg1 + msg2 + msg3}\n      </Grid.Column>\n    </Grid>\n\n);\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}